/**
 ******************************************************************************
 * @file    main.c
 * @author  Ac6
 * @version V1.0
 * @date    01-December-2013
 * @brief   Default main function.
 ******************************************************************************
 */


#include "stm32f4xx.h"
#include "stm32f4_discovery.h"

void GPIO_out_(){
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
	GPIO_InitTypeDef GPIO_InitStructure;
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13| GPIO_Pin_14| GPIO_Pin_15;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOD, &GPIO_InitStructure);
}
void GPIO_out_on_off(){
	GPIO_SetBits(GPIOD, GPIO_Pin_12);
	for (int i=0;i<10000000;i++);
	GPIO_SetBits(GPIOD, GPIO_Pin_13);
	for (int i=0;i<10000000;i++);
	GPIO_SetBits(GPIOD, GPIO_Pin_14);
	for (int i=0;i<10000000;i++);
	GPIO_SetBits(GPIOD, GPIO_Pin_15);
	for (int i=0;i<10000000;i++);


	GPIO_ResetBits(GPIOD, GPIO_Pin_12);
	for (int i=0;i<10000000;i++);
	GPIO_ResetBits(GPIOD, GPIO_Pin_13);
	for (int i=0;i<10000000;i++);
	GPIO_ResetBits(GPIOD, GPIO_Pin_14);
	for (int i=0;i<10000000;i++);
	GPIO_ResetBits(GPIOD, GPIO_Pin_15);
	for (int i=0;i<10000000;i++);
}
void GPIO_in_UP(){
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
	GPIO_InitTypeDef  GPIO_InitStructure;
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2| GPIO_Pin_3;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN; //wejscie
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
}
void GPIO_read_imput_data(){
	if(!GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_1))
			{
				GPIO_SetBits(GPIOD, GPIO_Pin_12);
			}
			else
			{
				GPIO_ResetBits(GPIOD, GPIO_Pin_12);
			}
			if(!GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_2))
			{
				GPIO_SetBits(GPIOD, GPIO_Pin_13);
			}
			else
			{
				GPIO_ResetBits(GPIOD, GPIO_Pin_13);
			}
			if(!GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_3))
			{
				GPIO_SetBits(GPIOD, GPIO_Pin_15);
			}
			else
			{
				GPIO_ResetBits(GPIOD, GPIO_Pin_15);
			}
}
int main(void)
{
	GPIO_out();
	GPIO_in_up();
	//GPIO_out_on_off();

	for(;;){
		GPIO_read_imput_data();
	}
}
